<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Channel Configuration File</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Channel Configuration File</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			<!--What is this configuration file and what does it do?-->
			The channel configuration file is a comma-delimited text file that provides a definition for the channel contents of the transmit and receive packets. This file can be edited in bulk easily in external applications and imported directly into the UDP Custom Device to quickly and consistently create channel configurations in the transmit and receive packets.
		</p>
		
		<h2>Configuration File Structure</h2>
		<p>
			<!--Description of what each column is supposed to contain and why they're important.-->
			The channel configuration file is comma-delimited text file. The first line in the file is dedicated to headers that identify what each column contents should be. The header is always expected to be the first line of the file and should not be removed.<br><br>
			<table>
				<tr>
					<th></th>
					<th>Column</th>
					<th>Description</th>
				</tr>
				<tr>
					<td><STRONG>Signal Name</STRONG></td>
					<td>0</td>
					<td>A non-functional field that is used exclusively for linking to other naming schemes. Other platforms and older systems may have restrictions on naming conventions that make them prohibitively difficult to read or inconvenient to put directly into Veristand. This field allows those names to be present in channel configuration, and acts as a simple link between the Veristand channel alias and the external system naming.</td>
				</tr>
				<tr>
					<td><STRONG>Alias</STRONG></td>
					<td>1</td>
					<td>The name that Veristand will use to perform channel setup and data typing when the channel configuration file is imported.<br>
						<STRONG>Receive:</STRONG> When imported into a <a href="CD - Receive Packet">receive packet</a>, the alias determines the exact name of the Veristand channel that will be generated to receive data. There should not be any duplicate aliases in the channel configuration file.<br>
						<STRONG>Transmit:</STRONG> When imported into a <a href="CD - Transmit Packet">transmit packet</a>, the alias determines which channels the transmit packet will target when being imported. Transmit channels should already be added to a transmit packet before the channel configuration file is imported.<br>
					</td>
				</tr>
				<tr>
					<td><STRONG>Data Type</STRONG></td>
					<td>2</td>
					<td>
						The data type that the channel represents. Even though all channels are of the Double data type in Veristand, this field instructs the UDP Custom Device engine to convert channel data appropriately to optimize payload sizes.<br>
						<STRONG>Supported Types:</STRONG> Single, Boolean (<a href="INFO - Data Types.htm">Data Type Conversions</a>)
					</td>
				</tr>
				<tr>
					<td><STRONG>Description</STRONG></td>
					<td>3</td>
					<td>A free-form field for putting a small description of the row in the file. Do not use commas or CRLF in your descriptions as is will cause errors in the file import and parsing.</td>
				</tr>
				<tr>
					<td><STRONG><!--Header Name--></STRONG></td>
					<td><!--Column location in the file--></td>
					<td><!--Description of header field and its purpose--></td>
				</tr>
			</table>
		</p>

		<h2>Channel Configuration File Importing</h2>
		<p><!--What happens to transmit and receive packets when a channel config file is imported and applied.-->
			When a configuration file is imported and applied to a packet, a number of events will occur, based on the packet type, the channels in the packet already, and the current order of the channels in the packet. Generally speaking, if the same channel configuration file is imported to both a transmit and receive packet, both packets will be setup most correctly to make them capable of transacting their channel data to each other directly over UDP.<br><br>
		</p>
		<h3>Transmit Packet Import</h3>
		<table>
			<tr>
				<th></th>
				<th>Import Details</th>
			</tr>
			<tr>
				<td><STRONG>Aliases</STRONG></td>
				<td>
					The aliases defined in the channel configuration will determine which channels in the transmit packet will be targeted by each line in the file. Any channels in the transmit packet that are not in the channel configuration file will be ignored and deprioritized in order assignment.
				</td>
			</tr>
			<tr>
				<td><STRONG>Description</STRONG></td>
				<td>
					If the target channel (as defined by the Alias) has a description that can be modified, the contents of this field will be placed in that channel's description.
				</td>
			</tr>
			<tr>
				<td><STRONG>Data Type</STRONG></td>
				<td>
					A target channel will have its <a href="INFO - Data Types.htm">data type</a> forcibly changed to match the contents of this field in the file.
				</td>
			</tr>
			<tr>
				<td><STRONG>Channel Ordering</STRONG></td>
				<td>
					All matching channels in the transmit packet will be reordered to match the order of aliases in the channel configuration file. Order is determined in the file from top to bottom. The first row after the header is the first channel that will be transmitted. The following row will be transmitted second, and so on. Any channels that are unaccounted for will be moved to the end of the transmit payload and will not be removed from the transmit packet.
				</td>
			</tr>
		</table>
		<h3>Receive Channel Import</h3>

		<table>
			<tr>
				<th></th>
				<th>Import Details</th>
			</tr>
			<tr>
				<td><STRONG>Aliases</STRONG></td>
				<td>
					Unlike a transmit packet, receive packets locally define all their channels based on the aliases in the channel configuration file. All pre-existing channels are deleted on the file import and new channels are created with names matching the aliases from the file.
				</td>
			</tr>
			<tr>
				<td><STRONG>Description</STRONG></td>
				<td>
					All channels receive a description that matches the contents of the description field in the file.
				</td>
			</tr>
			<tr>
				<td><STRONG>Data Type</STRONG></td>
				<td>
					A target channel will have its <a href="INFO - Data Types.htm">data type</a> set to match the contents of this field in the file.
				</td>
			</tr>
			<tr>
				<td><STRONG>Channel Ordering</STRONG></td>
				<td>
					All channels in the receive packet will be ordered to match the order of aliases in the channel configuration file. Order is determined in the file from top to bottom. The first row after the header is the first channel that is expected to be received. The following row will be received second, and so on. Since all channels are deleted initially on import, any unaccounted-for channels remain removed.
				</td>
			</tr>
		</table>

		<br>
		<h3>Channel Configuration Exporting</h3>
		<p>
			For simplicity, channel configurations can be exported to an appropriately formatted file. This can be done by clicking on the <i>Export</i> button on the <a href="CD - Transmit Packet.htm">Transmit Packet</a> or <a href="CD - Receive Packet.htm">Receive Packet</a> pages.
		</p>

		<h2>Example Configuration File Contents</h2>
		<p><!--Example of a raw csv configuration file with a minor description following it.-->
			An example of the contents of a small channel configuration file.<br><br>
			Signal Name,Alias,Datatype,Description<br>
			28VPWR00,Channel 0 28V Power,Boolean,Designates if 28V power is active on channel 0<br>
			PTCH0000,Channel 0 Pitch,Single,Channel 0 pitch (degrees)<br>
			YAW00000,Channel 0 Yaw,Single,Channel 0 yaw (degrees)<br>
			ROLL0000,Channel 0 Roll,Single,Channel 0 roll (degrees)<br>
			OILTMP00,Channel 0 Oil Temperature,Single,Channel 0 oil temperature (degrees F)<br>
		</p>
	</body>
	<footer>
		<a href="UDP Custom Device.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
