<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Transmit FIFO Format</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
		<style type="text/css">
			th, td{
				border: 1px solid black;
				text-align: center;
			}
		</style>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Transmit FIFO Format</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			Using the FIFO options in the <i>Buffered Transmit Packet</i> can be very powerful, allowing for high speed bursts of packet transmission on a network. However, using the FIFO option requires a bit more care when populating the buffer. Additionally, several channels and features of a transmit packet are no longer functional, depending on the FIFO option used.
			<!--Global scheme of why this screen is important and how it relates to the general process of setting up the custom device.-->
		</p>
		
		<h2>FIFO Buffer</h2>
		<p>
			The standard FIFO option is used to send several payloads in a buffer out on a network in sequential fashion.
			<h3>Format:</h3>
			<table>
				<tr>
					<th>Size(0)</th>
					<th>Payload(0)</th>
					<th>Size(1)</th>
					<th>Payload(1)</th>
					<th>Size(n)</th>
					<th>Payload(n)</th>
					<th>NULL FIELD</th>
				</tr>
				<tr>
					<td>4 Bytes - I32</td>
					<td>Size(0) Bytes - Untyped</td>
					<td>4 Bytes - I32</td>
					<td>Size(1) Bytes - Untyped</td>
					<td>4 Bytes - I32</td>
					<td>Size(n) Bytes - Untyped</td>
					<td>4 Bytes - Null</td>
				</tr>
			</table>

			<h3>Rules:</h3>
			<ul>
				<li>The <i>Transmit Bytes</i> channel will no longer work. All payload sizes must be encoded in the buffer.</li>
				<li>The first payload must <STRONG>ALWAYS</STRONG> start at the first byte in the buffer.</li>
				<li>All payloads in the buffer must be adjacent to one another with no empty bytes in-between.</li>
				<li>The <i>Size</i> field indicates <STRONG>ONLY</STRONG> the length of the payload.</li>
				<li>Payloads are sent out in order, starting from the first byte of the buffer and ending on the first size field found with a value of zero.</li>
				<li>All payloads with a non-zero size are always sent.</li>
				<li>The first size field found with a value of 0 will instruct the packet to stop scanning for more payloads to send.</li>
				<li><s>The packet <STRONG>DOES NOT</STRONG> spend time confirming a size field does not surpass the end of a buffer.</s></li>
				<li>As of version 1.4.3, packets now check if a size field will result in accessing memory outside of the allocated buffer.</li>
			</ul>
		</p>
		<h2>FIFO Buffer + Port</h2>
		<p>
			The port FIFO option is used to send several payloads in a buffer out on a network in sequential fashion. An additonal two bytes are used after the size field to specify the destination port.
			<h3>Format:</h3>
			<table>
				<tr>
					<th>Size(0)</th>
					<th>Port(0)</th>
					<th>Payload(0)</th>
					<th>Size(1)</th>
					<th>Port(1)</th>
					<th>Payload(1)</th>
					<th>Size(n)</th>
					<th>Port(n)</th>
					<th>Payload(n)</th>
					<th>NULL FIELD</th>
				</tr>
				<tr>
					<td>4 Bytes - I32</td>
					<td>2 Bytes - U16</td>
					<td>Size(0) Bytes - Untyped</td>
					<td>4 Bytes - I32</td>
					<td>2 Bytes - U16</td>
					<td>Size(1) Bytes - Untyped</td>
					<td>4 Bytes - I32</td>
					<td>2 Bytes - U16</td>
					<td>Size(n) Bytes - Untyped</td>
					<td>4 Bytes - Null</td>
				</tr>
			</table>
			<h3>Rules:</h3>
			<ul>
				<li>The <i>Transmit Bytes</i> channel will no longer work. All payload sizes must be encoded in the buffer.</li>
				<li>The <i>Port</i> channel and the <i>Destination Port</i> property will no longer work. All destination ports must be encoded in the buffer.</li>
				<li>The first payload must <STRONG>ALWAYS</STRONG> start at the first byte in the buffer.</li>
				<li>All payloads in the buffer must be adjacent to one another with no empty bytes in-between.</li>
				<li>The <i>Size</i> field indicates <STRONG>ONLY</STRONG> the length of the payload.</li>
				<li>Payloads are sent out in order, starting from the first byte of the buffer and ending on the first size field found with a value of zero.</li>
				<li>All payloads with a non-zero size are always sent.</li>
				<li>The first size field found with a value of 0 will instruct the packet to stop scanning for more payloads to send.</li>
				<li><s>The packet <STRONG>DOES NOT</STRONG> spend time confirming a size field does not surpass the end of a buffer.</s></li>
				<li>As of version 1.4.3, packets now check if a size field will result in accessing memory outside of the allocated buffer.</li>
			</ul>
		</p>
	</body>
	<footer>
		<a href="CD - Buffered Data Tx Packet.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
