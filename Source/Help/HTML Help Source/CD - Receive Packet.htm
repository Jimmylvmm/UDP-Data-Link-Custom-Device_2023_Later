<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Receive Packet</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Receive Packet</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			<!--Global scheme of why this screen is important and how it relates to the general process of setting up the custom device.-->
			This page represents a single packet to be received on a UDP port. A packet will have an ID, which represents the relative order in which the packet is expected to arrive in. This is the primary means for receiving data on a UDP port, reformatting it, and writing those values to other channels in the system definition.
		</p>
		
		<h2>Configuration Summary</h2>
		<p>
			<!--Description/summary of the basic purpose of the controls on this screen.-->
			A receive packet must be configured with a local NIC and port to send on. Additionally, the packet needs a destination address and port to try to send to. Further configuration can adjust the endianness of the expended inbound packet contents and header. A packet header must have at least the <i>Packet Size</i> bytes. Channels to receive data from the UDP packet can be added using the <i>Add Channel(s)</i> button or right-click menu option from the system definition tree.<br><br>
			<table>
				<tr>
					<th></th>
					<th>Description</th>
				</tr>
				<tr>
					<td><STRONG>Configure Header</STRONG></td>
					<td>Clicking on this button opens a dialogue that displays the current <a href="INFO - Packet Headers.htm">header payload</a> that is expected on the received packet. Header elements may be removed and added as needed.</td>
				</tr>
				<tr>
					<td><STRONG>Configure Threading</STRONG></td>
					<td>Clicking on this button opens a dialogue that displays the current <a href="INFO - Threading Options.htm">threading options</a> that will be used for this receive packet. These options adjust the runtime behavior of the packet threading.</td>
				</tr>
				<tr>
					<td><STRONG>Endianness</STRONG></td>
					<td>Determines the byte endianness of the received packet. Supports little-endian and big-endian.</td>
				</tr>
				<tr>
					<td><STRONG>IP Address of Local NIC</STRONG></td>
					<td>IP address of the local network interface card to use to receive this packet.</td>
				</tr>
				<tr>
					<td><STRONG>Port</STRONG></td>
					<td>The local port to use to receive this packet.</td>
				</tr>
				<tr>
					<td><STRONG>Read Timeout</STRONG></td>
					<td>The number of milliseconds that the packet should wait (at the longest) for any incoming data.</td>
				</tr>
				<tr>
					<td><STRONG>Multicast IP Address</STRONG></td>
					<td>The Multicast address to subscribe to in the event that inbound traffic is multicast.</td>
				</tr>
				<tr>
					<td><STRONG>Auto-Assign Local NIC</STRONG></td>
					<td>A shortcut functionality that enables the auto-population of the <i>IP Address of Local NIC</i> field. Attempts to use the IP address assigned to controller or realtime host.</td>
				</tr>
				<tr>
					<td><STRONG>Multicast?</STRONG></td>
					<td>Toggles if the UDP receive session expects data over a Multicast address.</td>
				</tr>
				<tr>
					<td><STRONG>Debug Mode</STRONG></td>
					<td>When active, logs verbose error messages to the Veristand console and default Veristand log file. Only errors are logged. Issues with opening duplex connections are current unhandled. Additionally, generates unique log files for the enabled packet. These log files can be found in the custom device directory on the target in the 'UDP_CD_Debug_Logs' directory. The custom device directory varies by target.  The log file creation will be displayed at startup on the console. These log files are unmanaged and should be manually cleaned-up or removed from the target upon completion of debug. Debug logs automatically begin overwriting old records after the file size has exceeded ~24MB. This caps the log file size around 24MB.<br><STRONG>NOTE:</STRONG> Debug mode sacrifices significant performance for thorough logging of errors. This includes receive packet timeouts and other potential error conditions.</td>
				</tr>
				<tr>
					<td><STRONG>New Data Options</STRONG></td>
					<td>Determines how the <i>New Data</i> channel operates during execution.<br><STRONG>Timeout Reset:</STRONG> When a new packet is received, the <i>New Data</i> is set to 1. Upon a UDP timeout, the <i>New Data</i> channel will reset to 0.<br><STRONG>Counter:</STRONG> The <i>New Data</i> channel initializes to 0. When a new packet is received, <i>New Data</i> increments by 1. When a UDP timeout occurs, the channel remains at its previous value.</td>
				</tr>
				<tr>
					<td><STRONG>Rx Channels</STRONG></td>
					<td>Enumerates <STRONG>ALL THE CHANNELS</STRONG> expected to be received on inbound UDP traffic for this packet. Further displays their expected data type and order in the packet. A channel may be removed by selecting it from this list, right-clicking, and selecting <i>Remove Channels</i>. The <a href="INFO - Data Types.htm">data type</a> of a channel may be changed similarly. Channel receive order may be changed by dragging and dropping channels in this listbox.</td> 
				</tr>
				<tr>
					<td><STRONG>Export</STRONG></td>
					<td>Exports the current receive packet channel configuration to a formatted csv file. This csv file may be imported by transmit or receive channel configurations for quick configuration and setup of many channels.</td>
				</tr>
			</table>
		</p>
		<h2>Channels</h2>
		<p>
			<table>
				<tr>
					<th></th>
					<th>Description</th>
				</tr>
				<tr>
					<td><STRONG>New Data</STRONG></td>
					<td>Changes state when a packet is received. See the <b>New Data Options</b> property configure how this channel will behave during runtime.</td>
				</tr>
				<tr>
					<td><STRONG>Port</STRONG></td>
					<td>Outputs the port that this packet last received data from.</td>
				</tr>
			</table>
		</p>
	</body>
	<footer>
		<a href="CD - Page Summary.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
