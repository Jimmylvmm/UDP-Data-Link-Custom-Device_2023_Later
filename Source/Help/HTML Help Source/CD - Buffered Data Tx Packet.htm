<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Buffered Transmit Packet</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Buffered Transmit Packet</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			<!--Global scheme of why this screen is important and how it relates to the general process of setting up the custom device.-->
			This page represents a single packet to be transmitted out on a UDP port. A packet will have an ID, which represents the relative order in which the packet will be sent. Unlike a typical <a href="CD - Transmit Packet.htm">transmit packet</a>, this packet only operates on buffers of data instead of channels.
		</p>
		
		<h2>Configuration Summary</h2>
		<p>
			<!--Description/summary of the basic purpose of the controls on this screen.-->
			A transmit packet must be configured with a local NIC and port to send on. Additionally, the packet needs a destination address and port to try to send to. Further configuration can adjust the endianness of the packet contents, the packet header, and frequency the packet is transacted. The size of the buffer must also be defined for this packet. The packet itself will create the buffer at run time. A pointer to the buffer is exposed via the <i>Buffer</i> channel on the first execution of the simulation. Another custom device or model that wants to push data into this buffer must have a channel mapped to the <i>Buffer</i> channel.
			<table>
				<tr>
					<th></th>
					<th>Description</th>
				</tr>
			<!--
				<tr>
					<td><STRONG>Configure Header</STRONG></td>
					<td>Clicking on this button opens a dialogue that displays the current <a href="INFO - Packet Headers.htm">header payload</a> that will be used for the transmit packet. Header elements may be removed and added as needed, but the <i>Packet Size</i> bytes are required at a minimum for the header.</td>
				</tr>
			-->
				<tr>
					<td><STRONG>Endianness</STRONG></td>
					<td>Determines the byte endianness of the transmitted packet. Supports little-endian and big-endian.</td>
				</tr>
				<tr>
					<td><STRONG>IP Address of Local NIC</STRONG></td>
					<td>IP address of the local network interface card to use to send this packet.</td>
				</tr>
				<tr>
					<td><STRONG>IP Address of Destination</STRONG></td>
					<td>IP address of the destination that is going to receive this packet. When the <i>Multicast?</i> option is set active, this field is used for the Multicast address.</td>
				</tr>
				<tr>
					<td><STRONG>Port</STRONG></td>
					<td>The local port to use to send this packet.</td>
				</tr>
				<tr>
					<td><STRONG>Destination Port</STRONG></td>
					<td>IP address of the destination that is going to receive this packet.</td>
				</tr>
				<tr>
					<td><STRONG>Auto-Assign Local NIC</STRONG></td>
					<td>A shortcut functionality that enables the auto-population of the <i>IP Address of Local NIC</i> field. Attempts to use the IP address assigned to controller or realtime host.</td>
				</tr>
				<tr>
					<td><STRONG>Transmit Options</STRONG></td>
					<td>This parameter controls the behavior of the <i>Transmit</i> channel. All transmit behavior is pending valid buffers, transmit bytes, and ports as relevant.<br><STRONG>Always:</STRONG> This packet will always attempt to be sent, regardless of the value of the <i>Transmit</i> channel.<br><STRONG>One-Shot:</STRONG> This packet will be sent any time the <i>Transmit</i> channel changes to a non-zero value. For example, this packet is transmitted when a change from 1 to 2 is observed, but not transmitted when a change from 1 to 0 is observed.<br><STRONG>Toggle:</STRONG> This packet is sent as long as the value of the <i>Transmit</i> channel is non-zero.</td>
				</tr>
				<tr>
					<td><STRONG>Transmit Echo Options</STRONG></td>
					<td>Determines the behavior of the <i>Transmitted</i> channel. These conditions only occur upon successful transmission of a packet.<br><STRONG>PCL Reset:</STRONG> The <i>Transmitted</i> channel will set to 1 for approximately least one PCL cycle before returning to 0.<br><STRONG>Counter:</STRONG> The <i>Transmitted</i> channel will continuously count up every time a packet is sent.<br><STRONG>Mirror:</STRONG> The <i>Transmitted</i> channel will display the same value as the <i>Transmit</i> channel.</td>
				</tr>
				<tr>
					<td><STRONG>Decimation</STRONG></td>
					<td>Determines the rate at which this packet is sent. This rate is relative to the loop rate of the Primary Control Loop (PCL). If the PCL is set to 100 Hz, and the decimation of this packet is set to 2, this transmit packet will be sent at a rate of 50 Hz. Decimation of 2 or more is potentially useful when sending subsets of the <i>Buffer Size</i> out on the network.</td>
				</tr>
				<tr>
					<td><STRONG>TTL</STRONG></td>
					<td>Sets the Time-To-Live property for transmitted packets. This is necessary when traversing particular pieces of networking equipment.</td>
				</tr>
				<tr>
					<td><STRONG>Port as Channel</STRONG></td>
					<td>When active, creates a <i>Port</i> channel. This port channel can be modified at runtime to change the destination port a packet is being sent to.</td>
				</tr>
				<tr>
					<td><STRONG>Pointer Encoding</STRONG></td>
					<td>Determines the encoding of the pointer in the <i>Buffer</i> channel. Conversion Encoding may result in loss of pointer bits in 64-bit systems.<br><STRONG>Direct Encoding:</STRONG> The pointer is cast into the <i>Buffer</i> channel at runtime and will occupy the lower 32 bits of the double value directly.<br><STRONG>Conversion Encoding:</STRONG> The pointer will undergo a floating point conversion and be represented as a floating point value in the <i>Buffer</i> channel.</td>
				</tr>
				<tr>
					<td><STRONG>Buffer Size</STRONG></td>
					<td>The number of bytes that will be allocated for using in the transmit buffer. Other models and custom devices filling using this buffer should never use more bytes than what is allocated here.</td>
				</tr>
				<tr>
					<td><STRONG>External Buffer</STRONG></td>
					<td>If active, an external model or custom device is required to provide the buffer that will ttransact data over UDP. The buffer pointer must be provided via the Buffer channel. If inactive, a buffer will be internally created by this custom device. The buffer will be exposed over the Buffer channel.</td>
				</tr>
			</table>
		</p>
		<p>
			<table>
				<tr>
					<th></th>
					<th>Description</th>
				</tr>
				<tr>
					<td><STRONG>Transmit</STRONG></td>
					<td>When this channel changes value, a packet is transmitted out on the network. This channel resets back to 0 after transmitting a payload. This channel is only used when the <i>Always Transmit</i> property is inactive.</td>
				</tr>
				<tr>
					<td><STRONG>Transmitted</STRONG></td>
					<td>Toggles high for one PCL cycle to confirm that successfully transmitted the packet. Depending on the <i>Transmit Options</i> property, the behavior of this channel may vary. For example, this channel will always have a value of 1 when the <STRONG>Always</STRONG> option is used.</td>
				</tr>
				<tr>
					<td><STRONG>Transmit Bytes</STRONG></td>
					<td>Takes an initial value of 0. Determines the number of bytes to transmit out on the UDP socket. This channel should never have a value larger than the <i>Buffer Size</i> property. Packets will not be transmitted until this value does not equal 0.</td>
				</tr>
				<tr>
					<td><STRONG>Buffer</STRONG></td>
					<td>Takes an initial value of 0. On the first execution of the simulation, this channel will be set to a value that represents a pointer to an in-memory buffer. Another custom device or model may map an input channel to this channel to pass large collections of data out on the UDP network. The data in the buffer takes no particular format and is application dependent. If an external buffer is being provided, no data will be transmitted out until a non-zero value is present on this channel. See the <b>Pointer Encoding</b> property for more information on how the pointer is encoded in this channel.</td>
				</tr>
				<tr>
					<td><STRONG>Port</STRONG></td>
					<td>Only present when the <i>Port as Channel</i> property is active. Initializes to a default value that is the same as the <i>Destination Port</i> property. When modified at runtime, results in packets being delivered to a different port. Prevents outbound traffic when set to 0.</td>
				</tr>
			</table>
		</p>
	</body>
	<footer>
		<a href="CD - Page Summary.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
