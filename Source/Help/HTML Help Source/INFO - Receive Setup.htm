<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Simple Receive Tutorial</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Simple Receive Tutorial</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			This page will walk you through a very simple setup of receiving a few channels of Veristand data over UDP. The workflow presented in this tutorial is the suggested methodology for configuring a UDP receive packet. This tutorial is complementary to the <a href="INFO - Transmit Setup.htm">Simple Transmit Tutorial</a> and should create a receive packet that can handle data from that transmit packet.
		</p>
		
		<h2>Creating a Receive Packet</h2>
		<p>
			Before any channel data can be received over UDP, a <a href="CD - Receive Packet">receive packet</a> must be defined. The receive packet holds information regarding the local network configuration and data payload configuration.
		</p>
		<img src="img/RxPacketSmall.png" alt="Receive Packet on a local/Windows host" style="width:697px;height:660px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			A receive packet is created by right-clicking on the <i>Rx Packets</i> and clicking on <i>Add Packet(s)</i>. A dialogue will appear, allowing for an initial name for the packet, as well as flagging if the packet should be buffered or use channels. Once a receive packet is added, the network settings and data configuration of the receive packet may be configured.
		</p>
		<img src="img/CreateRxPacketSmall.png" alt="Create Receive Packet" style="width:434px;height:270px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			It is suggested to use the <i>Auto-Assign Local NIC</i> functionality when just starting to setup your first receive packet. This will ensure that the packet is received out on the same network that the controller is present on. The receive port should match a pre-existing transmit packet definition or other properly-formatted inbound UDP data. For the purposes of this example, use the network settings as seen above.
		</p>
		<img src="img/PacketHeader.png" alt="Packet Header" style="width:289px;height:512px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			The final important detail to cover in a receive packet is the <a href="INFO - Packet Headers.htm">packet header</a>. The packet header identifies what additional data is expected in an inbound packet before the channel data. This packet header is pre-defined and can contain versioning, indentification information, and some minor debug values. For this simple setup, the only header value in use is the <i>Packet Size</i>, which is a 2-byte value required for all packets.
		</p>
		<h2>Adding Channels to the Packet</h2>
		<p>
			After the receive packet has been configured, channels need to be added to the packet to hold data received over UDP. Channels are created locally for a receive packet as needed to receive more data over UDP. These channels may be mapped to other Veristand channels, or the can be used as-is and have their calues displayed in a workspace. Unlike the transmit packet, channels can be easily removed and updated as the received UDP payload definition changes.
		</p>
		<img src="img/AddRxChannelRCM.png" alt="Add Receive Channel Right-Click Menu" style="width:448px;height:302px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			Channels can be added using the <i>Add Channel(s)</i> button in the top menu, or by using the right-click menu for the receive packet in the system definition tree. Channels can be named however is convenient for the application.
		</p>
		<h2>Configuring Channels</h2>
		<p>
			Once the channels are added, they will appear in the <i>Configured Channels</i> section in the receive packet page. Initially, these channels will all assume an encoded transmission data type of <i>Single</i>. They may also be in an incorrect order.
		</p>
		<img src="img/UpdateRxChannels.png" alt="Configure Rx Channels" style="width:683px;height:234px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			In order to resolve both issues, channels may have their expected encoded data type changed, as well as be reordered in this field. Reordering channels only requires that a channel is selected and then dragged and dropped in the listbox to new location. Order is important, as it dictates where in the received packet the channel data is expected. A channel at the top of the list (index 0) will always be received before the channel at index 1. The channel at index 1 will always be received before the channel at index 2. And so on. To adjust the expected encoded <a href="INFO - Data Types.htm">data type</a> of a channel, select a channel, right click on it, and navigate to the <i>Change Type</i> sub-menu. From here, select the target data type a channel data should be expected as when the data is being decoded from the received UDP packet. Please setup the channel order and data types to match the images above.<br>
			Once this is complete, the corresponding transmit packet from the <a href="INFO - Transmit Setup.htm">Simple Transmit Tutorial</a> should be able to transmit data to this receive packet.
		</p>
		<h2>Importing Channel Configurations</h2>
		<p>
			For very large channel counts, a utility has been included to allow for quick configuration of the channel order, data types, and (where applicable) the channels in use.
		</p>
		<img src="img/ReceiveChannelConfig.png" alt="Bulk Rx Channel Configuration" style="width:697px;height:694px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			The <a href="CD - Receive Channel Configuration.htm">receive channel configuration</a> allows for a <a href="CFG - Configuration File.htm">channel configuration file</a> to be imported into the receive packet. This is particularly useful for large transmit and receive packets that absolutely must have matching packet orders and data types. For a receive packet, the channel configuration file will explicitly add and remove any channels from the packet to make the receive packet match the file. The data types and ordering of the channels will be changed to match the contents of the channel configuration file. Any unaccounted channels will be removed from the packet.
		</p>
	</body>
	<footer>
		<a href="UDP Custom Device.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
