<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Simple Transmit Tutorial</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Simple Transmit Tutorial</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			This page will walk you through a very simple setup of transmitting a few channels of Veristand data over UDP. The workflow presented in this tutorial is the suggested methodology for configuring a UDP transmit packet. This tutorial is complementary to the <a href="INFO - Receive Setup.htm">Simple Receive Tutorial</a> and should create a transmit packet that will generate compatible traffic to that receive packet.
		</p>
		
		<h2>Creating a Transmit Packet</h2>
		<p>
			Before any channel data can be transmitted over UDP, a <a href="CD - Transmit Packet">transmit packet</a> must be defined. The transmit packet holds information regarding the local network configuration, the target network configuration, and data payload configuration.
		</p>
		<img src="img/TxPacketSmall.png" alt="Transmit Packet on a local/Windows host" style="width:698px;height:662px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			A transmit packet is created by right-clicking on the <i>Tx Packets</i> and clicking on <i>Add Packet(s)</i>. A dialogue will appear, allowing for an initial name for the packet, as well as flagging if the packet should be buffered or use channels. Once a transmit packet is added, the network settings and data configuration of the transmit packet may be configured.
		</p>
		<img src="img/CreateTxPacketSmall.png" alt="Create Transmit Packet" style="width:441px;height:318px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			It is suggested to use the <i>Auto-Assign Local NIC</i> functionality when just starting to setup your first transmit packet. This will ensure that the packet is sent out on the same network that the controller is present on. The destination network settings should be setup to match an existing receive packet. For the purposes of this example, use the network settings as seen above.
		</p>
		<img src="img/PacketHeader.png" alt="Packet Header" style="width:289px;height:512px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			The final important detail to cover in a transmit packet is the <a href="INFO - Packet Headers.htm">packet header</a>. The packet header determines what additional data is sent with the transmit packet before the channel data. This packet header is pre-defined and can contain versioning, indentification information, and some minor debug values. For this simple setup, the only header value in use is the <i>Packet Size</i>, which is 2-byte value required for all packets.
		</p>

		<h2>Assigning Channels to the Packet</h2>
		<p>
			After the transmit packet has been configured, channels need to be added to the packet to expose their data over UDP. Channels can only be added from other pre-existing sources in Veristand. For the purposes of this example, several system channels will be added, as they are always present in every Veristand system definition. In applications where model data, custom device data, and so on... need to be exposed over UDP, it is suggested to setup those data sources first.<br>
			<STRONG>NOTE:</STRONG> Removing a transmit source from a system definition is not handled very well at this time. It is suggested to remove the channel reference from the transmit packet before removing or otherwise modifying channels in source custom devices or models.
		</p>
		<img src="img/AddTxChannelRCM.png" alt="Add Transmit Channel Right-Click Menu" style="width:542px;height:300px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			Channels can be added using the <i>Add Channel(s)</i> button in the top menu, or by using the right-click menu for the transmit packet in the system definition tree. When a channel is going to be added to the packet, a channel selection dialog will open.
		</p>
		<img src="img/AddTxChannelsDialog.png" alt="Add Transmit Channel Dialog" style="width:967px;height:603px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			The dialog will provide a means for selecting other Veristand channels to transmit data from over UDP. Channels are selected from the tree control on the left, and are added to the listbox on the right by pressing the <i>&gt&gt</i> button. This dialog further allows channels to be removed from the packet by selecting the channel in the right listbox and pressing the <i>&lt&lt</i> button. For this example, select the <i>System Channels</i> from the left tree to match the image above. If the channels are not in the same order, they can be dragged and dropped in the listbox until they are they match. After the channels are added and in the same order, click on the <i>OK</i> button to confirm the channels. The <i>Cancel</i> button may be pressed to discard any channel changes on this dialog.
		</p>

		<h2>Configuring Channels</h2>
		<p>
			Once the channels are added, they will appear in the <i>Configured Channels</i> section in the transmit packet page. Initially, these channels will all assume an encoded transmission data type of <i>Single</i>. They may also be in an incorrect order.
		</p>
		<img src="img/UpdateTxChannels.png" alt="Configure Tx Channels" style="width:689px;height:197px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			In order to resolve both issues, channels may have their encoded data type changed, as well as be reordered in this field. Reordering channels only requires that a channel is selected and then dragged and dropped in the listbox to new location. Order is important, as it dictates where in the transmit packet the channel data will be placed. A channel at the top of the list (index 0) will always be transmitted before the channel at index 1. The channel at index 1 will always be transmitted before the channel at index 2. And so on. To adjust the encoded <a href="INFO - Data Types.htm">data type</a> of a channel, select a channel, right click on it, and navigate to the <i>Change Type</i> sub-menu. From here, select the target data type a channel should be treated as when being transmitted over UDP. Please setup the channel order and data types to match the images above.<br>
			Once this is complete, the corresponding receive packet from the <a href="INFO - Receive Setup.htm">Simple Receive Tutorial</a> should be able to receive data from this transmit packet.
		</p>

		<h2>Importing Channel Configurations</h2>
		<p>
			For very large channel counts, a utility has been included to allow for quick configuration of the channel order, data types, and (where applicable) the channels in use.
		</p>
		<img src="img/TransmitChannelConfig.png" alt="Bulk Tx Channel Configuration" style="width:699px;height:700px;margin:auto;display:block;max-width:100%;"></img>
		<p>
			The <a href="CD - Transmit Channel Configuration.htm">transmit channel configuration</a> allows for a <a href="CFG - Configuration File.htm">channel configuration file</a> to be imported into the transmit packet. This is particularly useful for large transmit and receive packets that absolutely must have matching packet orders and data types. For a transmit packet, the channel configuration file does not explicitly add any channels to the packet. The file only changes channel order and data types. Any transmit channels that are not in the file are placed at the highest index to give the highest chance that a single channel configuration file will make a transmit and receive packet work.
		</p>
	</body>
	<footer>
		<a href="UDP Custom Device.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
