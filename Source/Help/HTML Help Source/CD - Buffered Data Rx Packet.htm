<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!--
Generated by HTML Help Compile Tools. You can modify this directly with the HTML editor of your choice,
or you can open it in Word, edit it, and save it as a .htm or .html file.
-->


<html>
	<head>
		<meta http-equiv="Content-Style-Type" content="text/css">
		<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
		<title>Buffered Receive Packet</title> <!--REPLACE-->
		<link rel="STYLESHEET" type="text/css" href="css/VSsystemexplorer.css">
		<script src="common.js" type="text/javascript"></script><script src="js/expandable_tree.js" type="text/javascript"></script>
		<link rel="STYLESHEET" type="text/css" href="css/expandable_tree.css">
		<script src="launchhelp.js" type="text/javascript"></script><script src="js/dynamicjumps.js" type="text/javascript"></script>
	</head>
	<body>
		<noscript>
			<p class="Body">JavaScript is disabled. <a href="veristandmerge.chm::/JavaScript_Disabled.html">Details</a></p>
			<hr width="100%" noshade>
		</noscript>
		<h1>Buffered Received Packet</h1> <!--REPLACE-->
		<h2>Introduction</h2>
		<p>
			<!--Global scheme of why this screen is important and how it relates to the general process of setting up the custom device.-->
			This page represents a single packet to be received on a UDP port. A packet will have an ID, which represents the relative order in which the packet is expected to arrive in. Unlike a typical <a href="CD - Receive Packet.htm">receive packet</a>, this packet only operates on buffers of data instead of channels.
		</p>
		
		<h2>Configuration Summary</h2>
		<p>
			<!--Description/summary of the basic purpose of the controls on this screen.-->
			A receive packet must be configured with a local NIC and port to send on. Additionally, the packet needs a destination address and port to try to send to. Further configuration can adjust the endianness of the expended inbound packet contents. The size of the buffer must also be defined for this packet. The packet itself will create the buffer at run time. A pointer to the buffer is exposed via the <i>Buffer</i> channel on the first execution of the simulation. Another custom device or model that wants to read data from this buffer must have a channel mapped to the <i>Buffer</i> channel. An invalid buffer will take the value of 0 in the channel.
			<table>
				<tr>
					<th></th>
					<th>Description</th>
				</tr>
			<!--
				<tr>
					<td><STRONG>Configure Header</STRONG></td>
					<td>Clicking on this button opens a dialogue that displays the current <a href="INFO - Packet Headers.htm">header payload</a> that will be used for the transmit packet. Header elements may be removed and added as needed, but the <i>Packet Size</i> bytes are required at a minimum for the header.</td>
				</tr>
			-->
				<tr>
					<td><STRONG>Endianness</STRONG></td>
					<td>Determines the byte endianness of the transmitted packet. Supports little-endian and big-endian.</td>
				</tr>
				<tr>
					<td><STRONG>IP Address of Local NIC</STRONG></td>
					<td>IP address of the local network interface card to use to send this packet.</td>
				</tr>
				<tr>
					<td><STRONG>Port</STRONG></td>
					<td>The local port to use to send this packet.</td>
				</tr>
				<tr>
					<td><STRONG>Read Timeout</STRONG></td>
					<td>The number of milliseconds that the packet should wait (at the longest) for any incoming data. When trying to receive data sets smaller than the <i>Buffer Size</i> property, it is suggested to make this property at least as fast as the PCL period.</td>
				</tr>
				<tr>
					<td><STRONG>Multicast IP Address</STRONG></td>
					<td>The Multicast address to subscribe to in the event that inbound traffic is multicast.</td>
				</tr>
				<tr>
					<td><STRONG>Auto-Assign Local NIC</STRONG></td>
					<td>A shortcut functionality that enables the auto-population of the <i>IP Address of Local NIC</i> field. Attempts to use the IP address assigned to controller or realtime host.</td>
				</tr>
				<tr>
					<td><STRONG>Multicast?</STRONG></td>
					<td>Toggles if the UDP receive session expects data over a Multicast address.</td>
				</tr>
				<tr>
					<td><STRONG>Buffer Size</STRONG></td>
					<td>The number of bytes that will be allocated for using in the receive buffer. Other models and custom devices reading using this buffer should never use more bytes than what is allocated here.</td>
				</tr>
				<tr>
					<td><STRONG>External Buffer</STRONG></td>
					<td>If active, an external model or custom device is required to provide the buffer that will receive data over UDP. The buffer pointer must be provided via the Buffer channel. If inactive, a buffer will be internally created by this custom device. The buffer will be exposed over the Buffer channel.</td>
				</tr>
			</table>
		</p>
		<h2>Channels</h2>
		<p>
			<table>
				<tr>
					<th></th>
					<th>Description</th>
				</tr>
				<tr>
					<td><STRONG>New Data</STRONG></td>
					<td>This channel is set to 1 when new data is received. It is set to 0 when the network read times out.</td>
				</tr>
				<tr>
					<td><STRONG>Bytes Received</STRONG></td>
					<td>A receive packet always attempts to read, at a maximum, <i>Buffer Size</i> number of bytes. This channel will always reflect the number bytes actually received over the UDP socket.</td>
				</tr>
				<tr>
					<td><STRONG>Buffer</STRONG></td>
					<td>Takes an initial value of 0. On the first execution of the simulation, this channel will be set to a value that represents a pointer to an in-memory buffer. Another custom device or model may map an input channel to this channel to read large collections of data in from the UDP network. The data in the buffer takes no particular format and is application dependent. If an external buffer is being provided, no data will be transmitted out until a non-zero value is present on this channel. Provided buffers should be a union of a 32-bit pointer and a double, with the pointer occupying the lower 32 bits of the double. Alternatively, a raw typecast of a pointer to a double will work as well. If unclear, please refer to the locally-provided buffer for example pointer storage in this channel.</td>
				</tr>
			</table>
		</p>
	</body>
	<footer>
		<a href="CD - Page Summary.htm">Back</a> <!--REPLACE - Should refer to the previous page-->
		<hr>
	</footer>
</html> 
